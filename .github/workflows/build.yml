name: Build

on: push

jobs:

  install-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --pure-lockfile






  distributed-task:
    runs-on: ubuntu-latest
    needs: install-deps
    strategy:
      matrix:
        #target: ['test', 'lint', 'build']
        target: ['build']
        jobIndex: ['client', 'remote', 'server']
    env:
      jobCount: 3
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
  # - name: Cache Nx
  #      uses: actions/cache@v2
  #      with:
  #        path: node_modules/.cache/nx
  #        key: cache-nx-${{ hashFiles('yarn.lock') }}-${{ matrix.target }}-${{ matrix.jobIndex }}-${{ github.sha }}
 #         restore-keys: |
 #           cache-nx-${{ hashFiles('yarn.lock') }}-${{ matrix.target }}-${{ matrix.jobIndex }}-
 #           cache-nx-${{ hashFiles('yarn.lock') }}-
      - run: git fetch --no-tags --prune --depth=1 origin main
      - name: nx run-many:build
        run: npx nx run-many --target=build -p ${{ matrix.jobIndex }} --prod
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.3
        with:
        # Artifact name
          path: |
            dist
            Dockerfile
            package*.json
  build-docker:
    runs-on: ubuntu-latest
    needs: distributed-task
    steps:
      - name: Download files to publish
        uses: actions/download-artifact@v2
        with:
          name: artifact
      - name: Get cached node_modules    
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag infoscreen:$(date +%s)
      - uses: KuhlTime/ghcr-action@v2
          

          

    
